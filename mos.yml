author: mongoose-os
description: A Mongoose OS app skeleton
version: 1.0

libs_version: ${mos.version}
modules_version: ${mos.version}
mongoose_os_version: ${mos.version}

platform: esp8266

# Optional. List of tags for online search.
tags:
  - c
  - js
  - c++

# List of files / directories with C sources. No slashes at the end of dir names.
sources:
  - src

# List of dirs. Files from these dirs will be copied to the device filesystem
filesystem:
  - fs

# Custom configuration entries, settable via "device configuration"
# Below is a custom firmware configuration example.
# Uncomment and modify according to your needs:

# config_schema:
#  - ["my_app", "o", {title: "My app custom settings"}]
#  - ["my_app.bool_value", "b", false, {title: "Some boolean value"}]
#  - ["my_app.string_value", "s", "", {title: "Some string value"}]
#  - ["my_app.int_value", "i", 123, {title: "Some integer value"}]

config_schema:
  - ["mqtt.pub", "s", "/response", {title: "Publish topic"}]
  - ["mqtt.sub", "s", "/request", {title: "Subscribe topic"}]
  - ["mqtt.server", "broker.mqttdashboard.com:1883"]
  - ["device.id", "esp8266"]
  - ["device.password", "test"]
  - ["i2c.enable", true]

 
# These settings get compiled into the C structure, and can be accessed
# from the C code this way:
#
# printf("Hello from %s!\n", mgos_sys_config_get_device_id());
#
# Settings are cool: can be modified remotely without full firmware upgrade!
#
# To see all available compiled settings, buid the firmware and open
# build/gen/mgos_config.h file.
#
# Also, in this config_schema section, you can override existing
# settings that has been created by other libraries. For example, debug log
# level is 2 by default. For this firmware we can override it to 3:
#
# config_schema:
#  - ["debug.level", 3]

#libs:
#  - origin: https://github.com/mongoose-os-libs/boards
#  - origin: https://github.com/mongoose-os-libs/ca-bundle
#  - origin: https://github.com/mongoose-os-libs/rpc-service-config
#  - origin: https://github.com/mongoose-os-libs/rpc-service-fs
#  - origin: https://github.com/mongoose-os-libs/rpc-uart
#  - origin: https://github.com/mongoose-os-libs/vfs-dev-part

libs:
 - origin: https://github.com/mongoose-os-libs/boards
 - origin: https://github.com/mongoose-os-libs/ca-bundle
 - origin: https://github.com/mongoose-os-libs/rpc-service-config
 - origin: https://github.com/mongoose-os-libs/rpc-service-fs
 - origin: https://github.com/mongoose-os-libs/rpc-uart
 - origin: https://github.com/mongoose-os-libs/vfs-dev-part
 - origin: https://github.com/mongoose-os-libs/aws  #add libs from this to below libs.
 - origin: https://github.com/mongoose-os-libs/dash
 - origin: https://github.com/mongoose-os-libs/http-server
 - origin: https://github.com/mongoose-os-libs/ota-shadow
 - origin: https://github.com/mongoose-os-libs/ota-http-client
 - origin: https://github.com/mongoose-os-libs/ota-http-server
 - origin: https://github.com/mongoose-os-libs/shadow
 - origin: https://github.com/mongoose-os-libs/sntp
 - origin: https://github.com/mongoose-os-libs/wifi
 - origin: https://github.com/mongoose-os-libs/dht
 - origin: https://github.com/mongoose-os-libs/atca
 - origin: https://github.com/mongoose-os-libs/dns-sd
 - origin: https://github.com/mongoose-os-libs/rpc-service-atca

build_vars:
  MGOS_ROOT_FS_SIZE: 196608 # 192KB=0x30000,128KB=0x20000(131072), default is 256KB=0x40000(262144)
  APP_SLOT_SIZE: 0x190000   # 1536KB+64KB, 1536KB+128KB(0x1a0000), defualt is 1537KB=0x180000
  SSL: mbedTLS

###
### aws referals: links for setting-up aws-configurations
###
#aws-guide: https://aws.amazon.com/ko/blogs/apn/aws-iot-on-mongoose-os-part-1/
#aws-region code: https://docs.aws.amazon.com/ko_kr/general/latest/gr/rande.html
#aws-cli install: https://docs.aws.amazon.com/ko_kr/cli/latest/userguide/cli-chap-install.html
#aws-cli configure: https://docs.aws.amazon.com/ko_kr/cli/latest/userguide/cli-chap-configure.html#cli-quick-configuration-region
#aws-console-IAM-user pub: publish /requset using format below json format on mqtt test menu.
#{
#    gpio: {
#        pin: 2, //or 16
#        state: 0
#    }
#}
#// pin: 2(built-in ESP8266XX LED) or 16(built-in NodeMCU LED)
#aws-console-IAM-user sub: subcribe /response on aws console

# Used by the mos tool to catch mos binaries incompatible with this file format
manifest_version: 2017-09-29
